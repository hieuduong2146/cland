<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans" xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">
<http auto-config="true" use-expressions="true">
<csrf disabled="true"/>
<intercept-url pattern="/admincp" access="hasAnyRole('ROLE_ADMIN', 'ROLE_EDITOR', 'ROLE_USER')"/>
<intercept-url pattern="/admin/user/profile/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_EDITOR', 'ROLE_USER')"/>
<intercept-url pattern="/admin/cat/**" access="hasRole('ROLE_ADMIN')"/>
<intercept-url pattern="/admin/land/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_EDITOR', 'ROLE_USER' )"/>
<intercept-url pattern="/admin/user/**" access="hasRole('ROLE_ADMIN')"/>
<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
<intercept-url pattern="/**" access="permitAll()"/>
<form-login login-page="/auth/login" login-processing-url="/auth/login" default-target-url="/admincp" always-use-default-target="false" authentication-failure-url="/auth/login?error=loginErr" username-parameter="username" password-parameter="password"/>
<logout logout-url="/auth/logout" logout-success-url="/auth/login" delete-cookies="JSESSIONID" invalidate-session="true"/>
<access-denied-handler error-page="/403"/>
</http>
<beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
<beans:bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>
<authentication-manager>
<!-- authentication from database  -->
<authentication-provider>
<password-encoder ref="bcryptEncoder"/>
<jdbc-user-service data-source-ref="ds" users-by-username-query="select username, password, enable from users where username = ?" authorities-by-username-query=" select username, concat('ROLE_', name) AS role from users as u inner join roles as r on r.id = u.roleId where username = ?"/>
</authentication-provider>
</authentication-manager>
</beans:beans>